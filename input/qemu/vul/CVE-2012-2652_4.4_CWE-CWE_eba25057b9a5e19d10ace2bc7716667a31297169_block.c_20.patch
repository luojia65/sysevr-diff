--- CVE-2012-2652_4.4_CWE-CWE_eba25057b9a5e19d10ace2bc7716667a31297169_block.c_20_OLD.vul	2020-05-20 08:46:45.524401253 -0400
+++ CVE-2012-2652_4.4_CWE-CWE_eba25057b9a5e19d10ace2bc7716667a31297169_block.c_20_NEW.vul	2020-05-20 08:46:45.524401253 -0400
@@ -1,7 +1,26 @@
-void get_tmp_filename(char *filename, int size)
+int get_tmp_filename(char *filename, int size)
 {
+#ifdef _WIN32
     char temp_dir[MAX_PATH];
-
-    GetTempPath(MAX_PATH, temp_dir);
-    GetTempFileName(temp_dir, "qem", 0, filename);
+    /* GetTempFileName requires that its output buffer (4th param)
+       have length MAX_PATH or greater.  */
+    assert(size >= MAX_PATH);
+    return (GetTempPath(MAX_PATH, temp_dir)
+            && GetTempFileName(temp_dir, "qem", 0, filename)
+            ? 0 : -GetLastError());
+#else
+    int fd;
+    const char *tmpdir;
+    tmpdir = getenv("TMPDIR");
+    if (!tmpdir)
+        tmpdir = "/tmp";
+    if (snprintf(filename, size, "%s/vl.XXXXXX", tmpdir) >= size) {
+        return -EOVERFLOW;
+    }
+    fd = mkstemp(filename);
+    if (fd < 0 || close(fd)) {
+        return -errno;
+    }
+    return 0;
+#endif
 }
