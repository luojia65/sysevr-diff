--- CVE-2014-0144_0.0_CWE-000_cd598d41616189f33b35f69a5f7ba70c8112c272_qcow2.c_12_OLD.vul	2020-05-20 08:41:40.867738122 -0400
+++ CVE-2014-0144_0.0_CWE-000_cd598d41616189f33b35f69a5f7ba70c8112c272_qcow2.c_12_NEW.vul	2020-05-20 08:41:40.871737972 -0400
@@ -198,6 +198,13 @@
     s->nb_snapshots = header.nb_snapshots;
 
     /* read the level 1 table */
+    if (header.l1_size > 0x2000000) {
+        /* 32 MB L1 table is enough for 2 PB images at 64k cluster size
+         * (128 GB for 512 byte clusters, 2 EB for 2 MB clusters) */
+        error_setg(errp, "Active L1 table too large");
+        ret = -EFBIG;
+        goto fail;
+    }
     s->l1_size = header.l1_size;
 
     l1_vm_state_index = size_to_l1(s, header.size);
@@ -215,7 +222,16 @@
         ret = -EINVAL;
         goto fail;
     }
+
+    ret = validate_table_offset(bs, header.l1_table_offset,
+                                header.l1_size, sizeof(uint64_t));
+    if (ret < 0) {
+        error_setg(errp, "Invalid L1 table offset");
+        goto fail;
+    }
     s->l1_table_offset = header.l1_table_offset;
+
+
     if (s->l1_size > 0) {
         s->l1_table = g_malloc0(
             align_offset(s->l1_size * sizeof(uint64_t), 512));
