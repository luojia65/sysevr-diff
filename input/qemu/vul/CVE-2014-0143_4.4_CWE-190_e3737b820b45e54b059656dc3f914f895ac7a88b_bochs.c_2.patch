--- CVE-2014-0143_4.4_CWE-190_e3737b820b45e54b059656dc3f914f895ac7a88b_bochs.c_2_OLD.vul	2020-05-20 08:42:47.497258821 -0400
+++ CVE-2014-0143_4.4_CWE-190_e3737b820b45e54b059656dc3f914f895ac7a88b_bochs.c_2_NEW.vul	2020-05-20 08:42:47.497258821 -0400
@@ -28,7 +28,14 @@
         bs->total_sectors = le64_to_cpu(bochs.extra.redolog.disk) / 512;
     }
 
+    /* Limit to 1M entries to avoid unbounded allocation. This is what is
+     * needed for the largest image that bximage can create (~8 TB). */
     s->catalog_size = le32_to_cpu(bochs.catalog);
+    if (s->catalog_size > 0x100000) {
+        error_setg(errp, "Catalog size is too large");
+        return -EFBIG;
+    }
+
     s->catalog_bitmap = g_malloc(s->catalog_size * 4);
 
     ret = bdrv_pread(bs->file, le32_to_cpu(bochs.header), s->catalog_bitmap,
@@ -47,6 +54,12 @@
 
     s->extent_size = le32_to_cpu(bochs.extent);
 
+    if (s->catalog_size < bs->total_sectors / s->extent_size) {
+        error_setg(errp, "Catalog size is too small for this disk size");
+        ret = -EINVAL;
+        goto fail;
+    }
+
     qemu_co_mutex_init(&s->lock);
     return 0;
 
