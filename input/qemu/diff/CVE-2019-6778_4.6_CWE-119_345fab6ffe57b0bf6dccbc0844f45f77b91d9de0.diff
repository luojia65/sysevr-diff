commit 345fab6ffe57b0bf6dccbc0844f45f77b91d9de0
Author:     Prasad J Pandit <pjp@fedoraproject.org>
AuthorDate: Sun Jan 13 23:29:48 2019 +0530
Commit:     Michael Roth <mdroth@linux.vnet.ibm.com>
CommitDate: Tue Apr 2 13:16:34 2019 -0500

    slirp: check data length while emulating ident function
    
    While emulating identification protocol, tcp_emu() does not check
    available space in the 'sc_rcv->sb_data' buffer. It could lead to
    heap buffer overflow issue. Add check to avoid it.
    
    Reported-by: Kira <864786842@qq.com>
    Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    (cherry picked from commit a7104eda7dab99d0cdbd3595c211864cba415905)
    *CVE-2019-6778
    Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>

diff --git a/slirp/tcp_subr.c b/slirp/tcp_subr.c
index 473c8b04e6..aa88de854a 100644
--- a/slirp/tcp_subr.c
+++ b/slirp/tcp_subr.c
@@ -640,6 +640,11 @@ tcp_emu(struct socket *so, struct mbuf *m)
 			socklen_t addrlen = sizeof(struct sockaddr_in);
 			struct sbuf *so_rcv = &so->so_rcv;
 
+			if (m->m_len > so_rcv->sb_datalen
+					- (so_rcv->sb_wptr - so_rcv->sb_data)) {
+			    return 1;
+			}
+
 			memcpy(so_rcv->sb_wptr, m->m_data, m->m_len);
 			so_rcv->sb_wptr += m->m_len;
 			so_rcv->sb_rptr += m->m_len;
