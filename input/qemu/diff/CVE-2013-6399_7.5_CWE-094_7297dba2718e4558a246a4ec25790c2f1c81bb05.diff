commit 7297dba2718e4558a246a4ec25790c2f1c81bb05
Author:     Michael Roth <mdroth@linux.vnet.ibm.com>
AuthorDate: Thu Apr 3 19:51:46 2014 +0300
Commit:     Michael Roth <mdroth@linux.vnet.ibm.com>
CommitDate: Sun Jul 20 22:05:54 2014 -0500

    virtio: avoid buffer overrun on incoming migration
    
    CVE-2013-6399
    
    vdev->queue_sel is read from the wire, and later used in the
    emulation code as an index into vdev->vq[]. If the value of
    vdev->queue_sel exceeds the length of vdev->vq[], currently
    allocated to be VIRTIO_PCI_QUEUE_MAX elements, subsequent PIO
    operations such as VIRTIO_PCI_QUEUE_PFN can be used to overrun
    the buffer with arbitrary data originating from the source.
    
    Fix this by failing migration if the value from the wire exceeds
    VIRTIO_PCI_QUEUE_MAX.
    
    Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
    Signed-off-by: Juan Quintela <quintela@redhat.com>
    (cherry picked from commit 4b53c2c72cb5541cf394033b528a6fe2a86c0ac1)
    Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>

diff --git a/hw/virtio/virtio.c b/hw/virtio/virtio.c
index aeabf3a459..d4972849fc 100644
--- a/hw/virtio/virtio.c
+++ b/hw/virtio/virtio.c
@@ -906,6 +906,9 @@ int virtio_load(VirtIODevice *vdev, QEMUFile *f)
     qemu_get_8s(f, &vdev->status);
     qemu_get_8s(f, &vdev->isr);
     qemu_get_be16s(f, &vdev->queue_sel);
+    if (vdev->queue_sel >= VIRTIO_PCI_QUEUE_MAX) {
+        return -1;
+    }
     qemu_get_be32s(f, &features);
 
     if (virtio_set_features(vdev, features) < 0) {
